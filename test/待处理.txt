所有可操作的 地方（btn，a，select等）尽量添加快捷键（ctrl+F1显示每个操作位置的快捷键和说明）
尽量多添加 双击的功能

登录 401 没有提示
和原生的html混合只用问题，税表那里
 <el-dropdown-item>加入观察</el-dropdown-item> 存在本地，在列表中用颜色表明，   !（被单击过10家颜色不一样）
 支持拼音zhoum搜索                                                              !注意選中后重新賦值回綁定的數組

 右边的添加和编辑问题
 滚动通知问题（手机验证码）


翻页处理(延迟下载，当会面临搜索很卡！)
个人页面统计今天操作过哪些（何时爬取了什么，何时报了什么税，记账关键动作）

合同业务：
公司交接需要哪些资料
进度页面用颜色来区分哪些是左边的圈圈，哪些是右边的圈圈
记账页面要知道该公司是否报税成功（个税增值税等）
给统计界面添加 文字底图 background: url("data:image/svg+xml,%3Csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3E%3Ctext x='50%25' y='50%25' font-size='14' fill-opacity='0.5' text-anchor='middle' dominant-baseline='middle' transform='rotate(-45, 100 100)'%3Ezhangxinxu.com%3C/text%3E%3C/svg%3E");

解析excel的功能：
能不能拖到body 就弹出一个窗口，如果失败，
  解决1 提示可以拖到头部（对应的公司），再选择对应的模块
  解决2 提示托多body后， 再选择对应的模块

如果还是失败，就给出对应模块的模板形式和下载=上传excel的区别（颜色区分出不一样的地方）
任务列表显示：

把静态数据的枚举分离出来 Vue.prototype.znData

列页面需要把头部的公司置灰

把 pdf 放在前端处理

还没做得页面 ，上传页面，固定资产，账务多个页面

离开带操作的界面都要加钩子（是否有东西没有保存，或提交，或放弃本次修改）

每个页面都要添加 ctrl+？ 的快捷键来做引导（就是按 ctrl+? 时，导出引导模板（比如快捷键操作，操作流程，界面上的辅助说明，gif动画等））

登录成功后，还要带 item.category.qualification 到前端

setting 灰色掉的一定要给tip说明，什么才能点亮它

月初时，提醒管理员，填写初值化信息（比如：汇率，）

单击任何一条凭证，都到显示原始数据（发票，银行对账单 等）


  let period = {y:2021, m:6}
  let query = {'isp': $user.company, 'period.y': period.y, 'period.m': period.m}
  let appHistory = await $MQ.db.model('AccountingSikulix').find(query,'history classify').lean()
  let webHistory = await $MQ.db.model('AccountingPuppeteer').find(query,'history classify').lean()

  let calcMonth = (data) =>
  {
    let temp = {}
    for (let h of data) {
      for (let hh in h.history) {
        Object.assign(h.history[hh], {classify: h.classify}, {_id: h._id})
      }
      Object.assign(temp, h.history)
    }
    // 按天分
    let dayTime = 86400000 // 一天的毫秒数
    let currMonth = new Date(2021, 6, 1, 0, 0, 0).getTime() // 月初时间（毫秒）
    let month = {} // 一个月的统计数据
    for (let time in temp) {
      time = parseInt(time)
      let jihao = parseInt((time - currMonth) / dayTime) + 1 // 几号操作的
      let curr = month[jihao] ? month[jihao] : []
      let item = Object.assign(temp[time], {time})
      curr.push(item)
      month[jihao] = curr
    }
    // console.log(month)
    // 再按人分
    for (let eachDay in month) {
      let everyone = _.groupBy(month[eachDay], 'name')
      for (let name in everyone) {
        let count = everyone[name].length
        everyone[name] = _.groupBy(everyone[name], 'classify')
        everyone[name]['count'] = count
      }
      month[eachDay] = everyone
    }
    return month
  }

  let app = calcMonth(appHistory)
  let web = calcMonth(webHistory)




